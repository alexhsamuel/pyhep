dnl --------------------------------------------------------------------
dnl configure.in
dnl --------------------------------------------------------------------

AC_INIT(configure.in)

AC_PROG_CC
AC_PROG_CXX
AC_PROG_FC
AC_PROG_INSTALL

if test "$GCC" == yes; then
    CFLAGS="$CFLAGS -Wall"
fi

if test "$GXX" == yes; then
    CXXFLAGS="$CXXFLAGS -Wall"
    # CXXFLAGS="$CXXFLAGS -Wno-invalid-offsetof"
fi

AC_SUBST(CFLAGS)
AC_SUBST(CXXFLAGS)

dnl --------------------------------------------------------------------
dnl Check platform stuff.
dnl --------------------------------------------------------------------

AC_CONFIG_HEADER(ext/config.h)

dnl AC_CHECK_SIZEOF(long)
AC_CHECK_SIZEOF(void*)

dnl --------------------------------------------------------------------
dnl Check optional features.
dnl --------------------------------------------------------------------

AC_ARG_ENABLE(
  docs,
  [  --enable-docs           generate documentation],
  ENABLE_DOCS=yes,
  ENABLE_DOCS=no
)

AC_SUBST(ENABLE_DOCS)

dnl --------------------------------------------------------------------
dnl Locate the Python interpreter.
dnl --------------------------------------------------------------------

AC_ARG_WITH(
  python,
  [  --with-python=PATH      path to Python interpreter],
  PYTHON="$with_python",
  PYTHON=""
)

if test -n "$PYTHON" \
   -a "$PYTHON" != yes; 
then
  AC_CHECK_FILE(
    $PYTHON, 
    , 
    echo "Cannot find Python interpreter $PYTHON."; 
    exit 1
  )
else
  AC_PATH_PROGS(PYTHON, python2.2 python2 python, None)
  if test "$PYTHON" = None; 
  then
    echo "Cannot find Python interpreter."
    exit 1
  fi
fi

dnl Check that the Python interpreter works.
if $PYTHON -c "import sys; sys.exit(0)"; then
  true;
else
  echo "Python interpreter doesn't work."
  exit 1
fi

dnl --------------------------------------------------------------------
dnl Determine the Python version.
dnl --------------------------------------------------------------------

AC_MSG_CHECKING(Python version)
PYTHON_MAJOR_VERSION=`$PYTHON - <<EOF
import sys
try:
    print sys.version_info[[0]]
except AttributeError:
    print 0
EOF`
PYTHON_MINOR_VERSION=`$PYTHON - <<EOF
import sys
try:
    print sys.version_info[[1]]
except AttributeError:
    print 0
EOF`
if test $PYTHON_MAJOR_VERSION -gt 0;
then
  AC_MSG_RESULT(${PYTHON_MAJOR_VERSION}.${PYTHON_MINOR_VERSION})
else
  AC_MSG_RESULT(old)
fi

dnl --------------------------------------------------------------------
dnl Make sure the Python interpreter version is recent enough.
dnl --------------------------------------------------------------------

if test $PYTHON_MAJOR_VERSION -lt 2 \
        -o \( $PYTHON_MAJOR_VERSION -eq 2 \
              -a $PYTHON_MINOR_VERSION -lt 2 \);
then
  echo "Python version 2.2 or later required."
  exit 1
fi

dnl --------------------------------------------------------------------
dnl Extract information about the Python installation.
dnl --------------------------------------------------------------------

PYTHON_VERSION=${PYTHON_MAJOR_VERSION}.${PYTHON_MINOR_VERSION}
AC_SUBST(PYTHON_VERSION)

PYTHON_PREFIX=`$PYTHON -c "import sys; print sys.prefix"`
AC_SUBST(PYTHON_PREFIX)

dnl --------------------------------------------------------------------
dnl Find X11, Xft, and Imlib.
dnl --------------------------------------------------------------------

AC_PATH_XTRA

if test "$no_x" = yes;
then
    echo "Missing X Windows."
    exit 1
fi

XFT_CFLAGS=None
XFT_LIBS=None

AC_PATH_PROGS(xft_config, xft-config, pkg-config, None)
if test "$xft_config" != None;
then
    if test "$xft_config" != pkg-config; 
    then
        XFT_CFLAGS=`$xft_config --cflags`
        XFT_LIBS=`$xft_config --libs`
    else
        XFT_CFLAGS=`$xft_config --cflags xft`
        XFT_LIBS=`$xft_config --libs xft`
    fi
else
    AC_CHECK_LIB(Xft, XftFontOpen,
        XFT_LIBS=-lXft,
        ,
        $X_LIBS $X_EXTRA_LIBS -lX11)
fi

if test "$XFT_LIBS" = None;
then
    echo "Missing Xft."
    exit 1
fi

AC_SUBST(XFT_CFLAGS)
AC_SUBST(XFT_LIBS)

IMLIB_CFLAGS=None
IMLIB_LIBS=None

AC_PATH_PROGS(imlib_config, imlib-config, None)
if test "$imlib_config" != None;
then
    IMLIB_CFLAGS=`$imlib_config --cflags`
    IMLIB_LIBS=`$imlib_config --libs`
else
    echo "Missing Imlib."
    exit 1
fi

AC_SUBST(IMLIB_CFLAGS)
AC_SUBST(IMLIB_LIBS)

dnl --------------------------------------------------------------------
dnl Locate SWIG.
dnl --------------------------------------------------------------------

AC_ARG_WITH(
  swig,
  [  --with-swig=PATH        path to SWIG],
  SWIG="$with_swig",
  SWIG="no"
)

if test "$SWIG" = no;
then
  AC_PATH_PROGS(SWIG, swig, no)
fi

if test "$SWIG" != no;
then
    AC_MSG_CHECKING(SWIG)
    if test ! -x $SWIG;
    then
        echo "Problem with SWIG exectuable $SWIG."
        exit 1
    fi
    AC_MSG_RESULT($SWIG)

    AC_MSG_CHECKING(SWIG version)
    SWIGVERSION=`"$SWIG" -version 2>&1 | awk '/SWIG Version / { print $3; }'`
    AC_MSG_RESULT($SWIGVERSION)
fi

AC_SUBST(SWIG)
AC_SUBST(SWIGVERSION)

dnl --------------------------------------------------------------------
dnl Locate Root, if specified.
dnl --------------------------------------------------------------------

AC_ARG_WITH(
  root,
  [  --with-root=PATH        path to Root installation],
  ROOT_PREFIX="$with_root",
  ROOT_PREFIX="no"
)

if test $ROOT_PREFIX = yes;
then
  echo "Specify the path to the Root installation."
  exit 1
fi

if test $ROOT_PREFIX != no;
then
  AC_MSG_CHECKING(root)
  if test ! -x $ROOT_PREFIX/bin/root-config;
  then
    echo "Missing root-config; check the Root installation path."
    exit 1
  fi
  AC_MSG_RESULT($ROOT_PREFIX)
fi

AC_SUBST(ROOT_PREFIX)

dnl --------------------------------------------------------------------
dnl Locate CERNLIB, if specified.
dnl --------------------------------------------------------------------

AC_ARG_WITH(
  cernlib,
  [  --with-cernlib=PATH     path to cernlib installation],
  CERN_PREFIX="$with_cernlib",
  CERN_PREFIX="no"
)

if test $CERN_PREFIX = yes;
then
  echo "Specify the path to the CERNLIB installation."
  exit 1
fi

if test $CERN_PREFIX != no;
then
  AC_MSG_CHECKING(cernlib)
  if test ! -f $CERN_PREFIX/lib/libpacklib.a;
  then
    echo "Missing CERNLIB libraries; check the CERNLIB installation path."
    exit 1
  fi
  AC_MSG_RESULT($CERN_PREFIX)
fi

AC_SUBST(CERN_PREFIX)

dnl --------------------------------------------------------------------
dnl Locate EvtGen, if specified.
dnl --------------------------------------------------------------------

AC_ARG_WITH(
  evtgen,
  [  --with-evtgen=PATH      path to EvtGen installation],
  EVTGEN_PREFIX="$with_evtgen",
  EVTGEN_PREFIX="no"
)

if test $EVTGEN_PREFIX = yes;
then
  echo "Specify the path to the EvtGen installation."
  exit 1
fi

if test $EVTGEN_PREFIX != no;
then
  AC_MSG_CHECKING(EvtGen)
  if test ! -f $EVTGEN_PREFIX/libEvtGen.a;
  then
    echo "Missing EvtGen library; check the EvtGen installation path."
    exit 1
  fi
  AC_MSG_RESULT($EVTGEN_PREFIX)
fi

AC_SUBST(EVTGEN_PREFIX)

dnl --------------------------------------------------------------------
dnl Generate output artifacts.
dnl --------------------------------------------------------------------

SOURCE_PREFIX=`pwd`
AC_SUBST(SOURCE_PREFIX)

BASEDIR="$SOURCE_PREFIX/py"
AC_SUBST(BASEDIR)

VERSION=`cat version`
AC_SUBST(VERSION)

AC_OUTPUT(
  config.mk
  py/hep/config.py
  scripts/pyhep
  pyhep.spec
)

chmod a+x scripts/pyhep

dnl --------------------------------------------------------------------
dnl Emacs gunk follows.
dnl --------------------------------------------------------------------
dnl Local Variables:
dnl mode: Shell-script
dnl indent-tabs-mode: nil
dnl fill-column: 72
dnl End:
dnl --------------------------------------------------------------------
