from   hep.bool import *
from   hep.cernlib import hbook
import hep.hist
import hep.table 
from   random import random

# Construct a schema with three columns.
schema = hep.table.Schema()
schema.addColumn("a", "float32")
schema.addColumn("b", "float32")
schema.addColumn("c", "float32")

# Create a new HBOOK file.
hbook_file = hbook.create("test.hbook")
# Create a row-wise ntuple in it.
table = hbook.createTable("NTUPLE", hbook_file, schema, column_wise=0)
# Fill 100 random rows into the ntuple.
for i in xrange(0, 100):
    table.append(a=random(), b=random(), c=random())
# Release these to close the HBOOK file.
del table, hbook_file

# Reopen the HBOOK file.
hbook_file = hbook.open("test.hbook", update=True)
# Get the table.
table = hbook_file["NTUPLE"]
# Project a histogram of the sum of the three values in each row.
histogram = hep.hist.Histogram1D(30, 0.0, 3.0, expression="a + b + c")
hep.hist.project(table.rows, (histogram, ))
# Write the histogram to the HBOOK file.
hbook_file["HISTOGRAM"] = histogram

